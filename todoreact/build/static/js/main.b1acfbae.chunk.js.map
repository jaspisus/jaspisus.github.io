{"version":3,"sources":["components/Button.js","components/Header.js","components/Task.js","components/Tasks.js","components/AddTask.js","App.js","reportWebVitals.js","index.js"],"names":["Button","color","text","onClick","style","backgroundColor","className","defaultProps","Header","onAdd","Task","task","onDelete","onToggle","reminder","onDoubleClick","id","cursor","day","Tasks","tasks","map","AddTask","useState","setText","setDay","setReminder","onSubmit","e","preventDefault","alert","htmlFor","type","placeholder","value","onChange","target","checked","currentTarget","App","showAddTask","setShowAddTask","setTasks","Math","floor","random","newTask","length","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b1acfbae.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\n\r\nconst Button = ({ color, text, onClick }) => {\r\n\treturn (\r\n\t\t<button onClick={onClick} style={{ backgroundColor: color }} className=\"btn\">\r\n\t\t\t{text}\r\n\t\t</button>\r\n\t);\r\n};\r\n\r\nButton.defaultProps = {\r\n\tcolor: 'steelblue',\r\n};\r\n\r\nButton.propTypes = {\r\n\ttext: PropTypes.string,\r\n\tcolor: PropTypes.string,\r\n\tonClick: PropTypes.func,\r\n};\r\n\r\nexport default Button;\r\n","import Button from './Button';\r\n\r\nconst Header = ({ onAdd }) => {\r\n\treturn (\r\n\t\t<header className=\"header\">\r\n\t\t\t<h1>ToDo App</h1>\r\n\t\t\t<Button color=\"green\" text=\"Add\" onClick={onAdd} />\r\n\t\t</header>\r\n\t);\r\n};\r\n\r\nexport default Header;\r\n","import { FaTimes } from 'react-icons/fa';\r\n\r\nconst Task = ({ task, onDelete, onToggle }) => {\r\n\treturn (\r\n\t\t<div className={`task ${task.reminder ? 'reminder' : ''}`} onDoubleClick={() => onToggle(task.id)}>\r\n\t\t\t<h3>\r\n\t\t\t\t{task.text} <FaTimes style={{ color: 'red', cursor: 'pointer' }} onClick={() => onDelete(task.id)} />\r\n\t\t\t</h3>\r\n\t\t\t<p>{task.day}</p>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\nexport default Task;\r\n","import Task from './Task';\r\n\r\nconst Tasks = ({ tasks, onDelete, onToggle }) => {\r\n\treturn (\r\n\t\t<>\r\n\t\t\t{tasks.map(task => (\r\n\t\t\t\t<Task key={task.id} task={task} onDelete={onDelete} onToggle={onToggle} />\r\n\t\t\t))}\r\n\t\t</>\r\n\t);\r\n};\r\n\r\nexport default Tasks;\r\n","import { useState } from 'react';\r\n\r\nconst AddTask = ({ onAdd }) => {\r\n\tconst [text, setText] = useState('');\r\n\tconst [day, setDay] = useState('');\r\n\tconst [reminder, setReminder] = useState(false);\r\n\r\n\tconst onSubmit = e => {\r\n\t\te.preventDefault();\r\n\r\n\t\tif (!text) {\r\n\t\t\talert('Please add task');\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tonAdd({ text, day, reminder });\r\n\r\n\t\tsetText('');\r\n\t\tsetDay('');\r\n\t\tsetReminder(false);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<form className=\"add=form\" onSubmit={onSubmit}>\r\n\t\t\t<div className=\"form-control\">\r\n\t\t\t\t<label htmlFor=\"\">Task</label>\r\n\t\t\t\t<input type=\"text\" placeholder=\"Add Task\" value={text} onChange={e => setText(e.target.value)} />\r\n\t\t\t</div>\r\n\t\t\t<div className=\"form-control\">\r\n\t\t\t\t<label htmlFor=\"\">{'Day & Time'}</label>\r\n\t\t\t\t<input type=\"text\" placeholder=\"Add Day and Time\" value={day} onChange={e => setDay(e.target.value)} />\r\n\t\t\t</div>\r\n\t\t\t<div className=\"form-control form-control-check\">\r\n\t\t\t\t<label htmlFor=\"\">Set Reminder</label>\r\n\t\t\t\t<input\r\n\t\t\t\t\ttype=\"checkbox\"\r\n\t\t\t\t\tvalue={reminder}\r\n\t\t\t\t\tchecked={reminder}\r\n\t\t\t\t\tonChange={e => setReminder(e.currentTarget.checked)}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t<input className=\"btn btn-block\" type=\"submit\" value=\"Save Task\" />\r\n\t\t</form>\r\n\t);\r\n};\r\n\r\nexport default AddTask;\r\n","import Header from './components/Header';\nimport Tasks from './components/Tasks';\nimport AddTask from './components/AddTask';\nimport { useState } from 'react';\n\nfunction App() {\n\tconst [showAddTask, setShowAddTask] = useState(false);\n\n\tconst [tasks, setTasks] = useState([\n\t\t{\n\t\t\tid: 1,\n\t\t\ttext: 'Kodzić',\n\t\t\tday: '02.08.2021',\n\t\t\treminder: false,\n\t\t},\n\t\t{\n\t\t\tid: 2,\n\t\t\ttext: 'Poćwiczyć Reacta',\n\t\t\tday: '03.08.2021',\n\t\t\treminder: true,\n\t\t},\n\t\t{\n\t\t\tid: 3,\n\t\t\ttext: 'Wysłać CV',\n\t\t\tday: '03.08.2021',\n\t\t\treminder: true,\n\t\t},\n\t]);\n\n\t//AddTask\n\n\tconst addTask = task => {\n\t\tconst id = Math.floor(Math.random() * 10000 + 1);\n\t\tconst newTask = { id, ...task };\n\t\tsetTasks([...tasks, newTask]);\n\t};\n\n\t//DeleteTask\n\n\tconst deleteTask = id => {\n\t\tsetTasks(tasks.filter(task => task.id !== id));\n\t};\n\n\t// Toggle reminder\n\tconst toggleReminder = id => {\n\t\tsetTasks(tasks.map(task => (task.id === id ? { ...task, reminder: !task.reminder } : task)));\n\t};\n\n\treturn (\n\t\t<div className=\"container\">\n\t\t\t<Header onAdd={() => setShowAddTask(!showAddTask)} />\n\t\t\t{showAddTask && <AddTask onAdd={addTask} />}\n\t\t\t{tasks.length > 0 ? <Tasks tasks={tasks} onDelete={deleteTask} onToggle={toggleReminder} /> : 'No Tasks'}\n\t\t</div>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/index.min.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}